AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM Template for Lambda Function, S3 Bucket for Static File Hosting via CloudFront, and API Gateway

Resources:
  
  # Lambda function for handling prompt and AI generation
  PromptLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      Runtime: python3.9
      CodeUri: ./src
      MemorySize: 128
      Timeout: 30
      Environment:
        Variables:
          GENAI_API_KEY: YOUR_GOOGLE_API_KEY
      Events:
        ApiGateway:
          Type: Api
          Properties:
            Path: /prompt
            Method: POST

  # S3 Bucket for hosting static content (not configured as website)
  StaticSiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'static-site-${AWS::Region}-${AWS::AccountId}'

  # Origin Access Identity for CloudFront to access the S3 bucket
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'Access S3 bucket ${StaticSiteBucket} from CloudFront'

  # CloudFront distribution for serving static files from S3
  StaticSiteCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt StaticSiteBucket.RegionalDomainName
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
        Enabled: true
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: 
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
        DefaultRootObject: index.html
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

  # Bucket Policy to allow CloudFront to access the S3 bucket
  StaticSiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StaticSiteBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
            Action: s3:GetObject
            Resource: !Sub 'arn:aws:s3:::${StaticSiteBucket}/*'

Outputs:
  # Output for Lambda Function API Gateway URL
  PromptLambdaFunctionApi:
    Description: "API Gateway endpoint URL for Prod stage for the Prompt Lambda Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/prompt/"
    
  # Output for CloudFront URL to access static files
  StaticSiteCloudFrontURL:
    Description: "CloudFront URL for the static site"
    Value: !Sub "https://${StaticSiteCloudFrontDistribution.DomainName}"